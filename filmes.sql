---------------------- 5 любимых фильмов --------------------------------------------------------
select ('ФИО: Мамедова Фатима');

-- создадим и заполним таблицу с фильмами

create table filmes (
title varchar, 
id int, 
country varchar, 
box_office bigint, 
release_year timestamp);

insert into filmes(title, id, country, box_office, release_year) values('Побег из Шоушенка',1,'США',59841469,'1994-09-10'::timestamp),
	('Форест Гамп',2,'США',677386686,'1994-06-23'::timestamp),('Трасса 60', 3, 'Канада', NULL, '2002-04-13'::timestamp),
	,('Области тьмы', 4, 'США', 161849455, '2011-03-08'::timestamp), ('Грань будущего', 5, 'США', 370541256, '2014-05-28'::timestamp)

-- создадим и заполним таблицу с актерами (макс 5), режиссерами и сценаристами (макс 3)

create table persons (
id int, 
fio varchar);

insert into persons (id, fio) values (1, 'Роббинс, Тим'), (2, 'Фриман, Морган'), (3, 'Гантон, Боб'), 
	(4, 'Сэдлер, Уильям'), (5, 'Браун, Клэнси'), (6, 'Дарабонт, Фрэнк'), (7, ' Кинг, Стивен'),
	(8, 'Хэнкс, Том'), (9, 'Райт, Робин'), (10, 'Филд, Салли'), (11, 'Синиз, Гэри'),
	(12, 'Уильямсон, Майкелти'), (13, 'Земекис, Роберт'), (14, 'Рот, Эрик'), (15, 'Грум, Уинстон'),
	(16, 'Марсден, Джеймс'), (17, 'Олдман, Гари'), (18, 'Смарт, Эми'), (19, 'Рассел, Курт'),
	(20, 'Эдисон, Мэтью'), (21, 'Гейл, Боб'), (22, 'Купер, Брэдли'), (23, 'Де Ниро, Роберт'),
	(24, 'Корниш, Эбби'), (25, 'Ховард, Эндрю'), (26, 'Фрил, Анна'), (27, 'Бергер, Нил'),
	(28, 'Диксон, Лесли'), (29, 'Глинн, Алан'), (30, 'Круз, Том'), (31, 'Блант, Эмили'),
	(32, 'Пэкстон, Билл'), (33, 'Глисон, Брендан'), (34, 'Тейлор, Ноа'), (35, 'Лайман, Даг'),
	(36, 'МакКуори, Кристофер'), (37, 'Баттеруорт, Джез'), (38, 'Баттеруорт, Джон-Генри');

-- создадим таблицу, объемдиняющую в себе ключи id участника и id фильма, т.е. попробую реализовать звезду

create table persons2content(
person_id int, 
film_id int, 
person_type varchar);

insert into persons2content (person_id, film_id, person_type) values (1, 1, 'актер'), (2, 1, 'актер'), (3, 1, 'актер'), 
	(4, 1, 'актер'), (5, 1, 'актер'), (6, 1, 'режиссер'), (6, 1, 'сценарист'), (7, 1, 'сценарист'), 
	(8, 2, 'актер'), (9, 2, 'актер'), (10, 2, 'актер'), (11, 2, 'актер'),
	(12, 2, 'актер'), (13, 2, 'режиссер'), (14, 2, 'сценарист'), (15, 2, 'сценарист'),
	(16, 3, 'актер'), (17, 3, 'актер'), (18, 3, 'актер'), (19, 3, 'актер'),
	(20, 3, 'актер'), (21, 3, 'режиссер'), (21, 3, 'сценарист'), (22, 4, 'актер'), (23, 4, 'актер'),
	(24, 4, 'актер'), (25, 4, 'актер'), (26, 4, 'актер'), (27, 4, 'режиссер'),
	(28, 4, 'сценарист'), (29, 4, 'сценарист'), (30, 5, 'актер'), (31, 5, 'актер'),
	(32, 5, 'актер'), (33, 5, 'актер'), (34, 5, 'актер'), (35, 5, 'режиссер'),
	(36, 5, 'сценарист'), (37, 5, 'сценарист'), (38, 5, 'сценарист');
	
--------------------------------- 2 НФ --------------------------------------------------------

-- создадим и заполним таблицу фильм-оскар

create table oscars (
 	id serial,
 	Фильм varchar,
 	Режиссер varchar,
 	Оскар varchar);

insert into oscars (Фильм, Режиссер, Оскар) values ('Энни Холл','Вуди Аллен','+'),
	('Быть Джоном Малковичем','Спайк Джонс','+'),('Любовь и Смерть','Вуди Аллен','-');
	
select * from oscars;
/*
 id |         Фильм          |  Режиссер   | Оскар 
----+------------------------+-------------+-------
  1 | Энни Холл              | Вуди Аллен  | +
  2 | Быть Джоном Малковичем | Спайк Джонс | +
  3 | Любовь и Смерть        | Вуди Аллен  | -
(3 rows)
*/
-- создадим и заполним таблицу Режиссер-рейтинг

create table rating (
	id serial,
	Режиссер varchar,
	"Рейтинг IMDB" int);

insert into ratings(Режиссер, "Рейтинг IMDB") values ('Вуди Аллен', 8), 
	('Спайк Джонс', 7);
	
select * from rating;
/*
 id |  Режиссер   | Рейтинг IMDB 
----+-------------+--------------
  1 | Вуди Аллен  |            8
  2 | Спайк Джонс |            7
(2 rows)
*/
-- Результат:

select o.Фильм, o.Режиссер, o.Оскар, r."Рейтинг IMDB" from oscars o left join rating r on o.Режиссер=r.Режиссер order by o.id;
/*
         Фильм          |  Режиссер   | Оскар | Рейтинг IMDB 
------------------------+-------------+-------+--------------
 Энни Холл              | Вуди Аллен  | +     |            8
 Быть Джоном Малковичем | Спайк Джонс | +     |            7
 Любовь и Смерть        | Вуди Аллен  | -     |            8
(3 rows)
*/


--------------------------------- 3 НФ --------------------------------------------------------

-- создадим и заполним таблицу страна-оскар

create table country (
	id serial,
	"Страна действия" varchar,
	Оскар varchar);
	
insert into country ("Страна действия", Оскар) values ('США','+'), ('Россия','-');

select * from country;
/*
 id | Страна действия | Оскар 
----+-----------------+-------
  1 | США             | +
  2 | Россия          | -
(2 rows)
*/

-- создадим связь между таблицей с фильмами и страной

create table oscars2country (
	film_id int,
	country_id int);
	
insert into oscars2country (film_id, country_id) values (1,1), (2,1), (3,2);

select * from oscars2country;

/*
 film_id | country_id 
---------+------------
       1 |          1
       2 |          1
       3 |          2
(3 rows)
*/

-- Результат:

select o.Фильм, c.Оскар, c."Страна действия" 
from oscars o left join oscars2country oc 
	on o.id=oc.film_id
		left join country c on oc.country_id=c.id
order by o.id asc;

/*
         Фильм          | Оскар | Страна действия 
------------------------+-------+-----------------
 Энни Холл              | +     | США
 Быть Джоном Малковичем | +     | США
 Любовь и Смерть        | -     | Россия
(3 rows)
*/
